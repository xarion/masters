%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 182.000000 308.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.12.5 (Build 16F73) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 182 308
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 182 308
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /B put
dup 34 /a put
dup 35 /t put
dup 36 /c put
dup 37 /h put
dup 38 /space put
dup 39 /N put
dup 40 /o put
dup 41 /r put
dup 42 /m put
dup 43 /R put
dup 44 /e put
dup 45 /l put
dup 46 /u put
dup 47 /D put
dup 48 /p put
dup 49 /w put
dup 50 /i put
dup 51 /s put
dup 52 /C put
dup 53 /n put
dup 54 /v put
dup 55 /P put
dup 56 /I put
dup 57 /A put
dup 58 /d put
dup 59 /O put
dup 60 /g put
dup 61 /slash put
dup 62 /parenleft put
dup 63 /parenright put
dup 64 /k put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<



342E0223220E02851C3C5E41415E3C1C1C3C5E41415E3C1C5F2B5680555580562B2B5680555580562B0165366954333354693636695433335469364987683D3D6887494987683E3E688700000002004E0000026202CA000800130089B800152FBA0001000900032BB8000110B8001510B80010DCB80005DC410500DA000500EA000500025D411B0009000500190005002900050039000500490005005900050069000500790005008900050099000500A9000500B9000500C90005000D5DB8000110B8000BD000B8000A2FBA0009000100032BB8000910BA0000000C00032BB800001030311311333216151406270111331133163635342623ADBA514B4B51FEE75FDA6C6F6F6C0174010643404044010156FD360124017064646F000002004E0000029002CA0020002B009DB8002D2FBA0023000000032BB8002310B80002D0B8002D10B8001DDCBA001A0000001D111239B80027DC410500DA002700EA002700025D411B0009002700190027002900270039002700490027005900270069002700790027008900270099002700A9002700B9002700C90027000D5D00B800012FB8000E2FBA0000002300032BB8000010BA0022000300032BB8002210BA001A0003002211123930311311331133321E02171E0317332E03272E0327353E013534262303233533321615140E024E5FE8232A1A0C04050202070A6A0F0F080202030B17271F413B73662BC6EC433C1B2D3C02CAFD36013115232F1A1A362F260B122F34361A1A30271C06021262415764FEB7F9443627311D0A00000000020024FFF5020A021100300042015CB800142BBB00380003000D00182BBB002A0003001700182BB8001710B80005D0B800052F4111000600380016003800260038003600380046003800560038006600380076003800085D4105008500380095003800025DB8003810B900200003F4B9001F0003F4B8001710B900300003F4B8001710B80031D0B800312FB8002A10B80044DC00B800014558B800252F1BB9002500083E59B800014558B800022F1BB9000200043E59B800014558B800082F1BB9000800043E59BA000500020025111239B8002510B9001C0002F441050089001C0099001C00025D41110008001C0018001C0028001C0038001C0048001C0058001C0068001C0078001C00085DB8002510B8001FDCB8000210B9002E0002F441110007002E0017002E0027002E0037002E0047002E0057002E0067002E0077002E00085D41050086002E0096002E00025DBA003000020025111239BA003100020025111239B8003DD030312506232226350E0123222E0235343E02373E0335342E0223220607233E0333321E0215111416333237270E0515141E0233323E0235020A16272127235D36233F2E1B1E313F21233F301C152129143648035502243C4D2C23




44B8000A2BB800002B000000
00>] def
/CharStrings 34 dict dup begin
/.notdef 0 def
/space 1 def
/parenleft 2 def
/parenright 3 def
/slash 4 def
/A 5 def
/B 6 def
/C 7 def
/D 8 def
/I 9 def
/N 10 def
/O 11 def
/P 12 def
/R 13 def
/a 14 def
/c 15 def
/d 16 def
/e 17 def
/g 18 def
/h 19 def
/i 20 def
/k 21 def
/l 22 def
/m 23 def
/n 24 def
/o 25 def
/p 26 def
/r 27 def
/s 28 def
/t 29 def
/u 30 def
/v 31 def
/w 32 def
/uni2B91 33 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4243299 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C9315F0017FC3864FF8D40C74661F4AC4F359AB40455CCBD4B88F0CECF0FBBCE3D81E443BF2B3BDABA64DE646528D274216E141CC2BD3049E9F7D1A996BC56CAFBBBB18F69063033C6B97D9FB89E146ACD1A18BD717F52681A976D83447D96DD3627801822CD048EBBCB339FFD822B626DCA698EC82A83DDE6C63B202E993FDA7FD9334455C19E0266FB6CAD5E75809E8EA02787F0B24FC3B6CE0844BB94D9B6F6E3B54907FBE75E9D0B93944E60A47A78975A1082F4788D2EDFFD7B3BAD21E49824AE11144B5E8607A2DABCE99AC1FBAEDCA20FE7C2634229B73F93A2A563BA33F7886CFDA4A87BF957C87DA113A85E2960E06411088B100C699540895C0513B2F367FE2D8F2DED60FEE0C9F25743CEF01A09789AE33E7309771C9D6218C582AFD509CABA8AF86E6468DAF5380B2A31A82615ECB8FFE61301D7E26201F3AD001202C7704A438020BACBEDFAF6D1B5859FCBE672A909DE5ADA974C2CB11350638AD37E641477381E96978E7F11829C062C4108C11A5FBF8C11CF9E773980F48CFD173A4961D7D56C1F92632F82BC412E2D42A1282EC3CF23ACC514C46EBFA332D4964567C6B3EB0486EC1BECFBB380F4BA4E38F09658DE41BF74D3255BA58F115C93A133B0B743BDC2F7DA94C5498A864F9899F2B0C1339FA9FF0C7EFBB8FBFE95D7F6ABD3073C20CF28D2892AA29FFF9142D3E28FB4113F22EE8F09DA68258B8847EC28A423DEAA9D5D9AA23ED403D20C3C1883065E8FC463BE57896897CE0F7E2




585F77C6CDC1A2353BE14BEAA7891493CEB8A4166BD070EF9B1BFD071F5A5178C25EEE98ADDF4501554E243470E035AA0B94FF3C729084E57B486FCE268330CBA829282C910A7E276156B767DD95BA46D02399A3B2F14B614893C1DB266A3463496C1D30E33DCAD94951AACD1B20A0BDFD100F339A6B88E4CD1F35B4A96405E78EE141A0E117507743251648496A999A6DF028CA41D74FB723C091103B6C45A373820A0527E650D4A577EC88040EAE90D22F2F5C01DDE67C6617B3539A7FFF81DD9A07DFF41502BE5B29F95A284164B01F36141D3DCDD5C1D7B4D80E23DD4FA2EFC56C9E6FB0A7DCD1ED9758D749709618DEEEB1B5C16759CA89D166DDBB68022D46AF963962AADA179EB00478DD3C8BD16708CF0F5E511A6608299E631E4A293266B42B6F148FC52ABD6E12D671C1095D5F3C2B3763D55A6B46F5D69741DAB1A30764C9D1FE05CB4825D867B11CF0725A7D9F829BE59C352845A69EAE383FE9AD85A990F768ADDD594BCACC793D6683D0D6BABBEA8B6C94FF30183CF5B4A360B48463B219F6045893B98E930D8E051DD4291A2B2BDDE2F7BBDAE5A54EBB9555C4A3F95600CD00B22D8931FF7AE42849E792405596B39F20BEF7047151E3FDF8BCC2DE84EF8A4863BA45331C35218181EB17FBE7D416BA234417D81920A977FF37FF8B57FF72263D5D1788BA0096805A46BEF5237972E4B1A324947058743828CE2F7E4077958D06694106337CE23DC90779A8098EDDE92781520C550D62B6557E062A25F42DAAEC12EFFB192E3838C60866E8CF69CB21F6C7E3FBB862805A1A1F1D14F3825737E5F0D497FEA8BB46E2E41EDE3D8E0B2C5CA9760DABFFDF1C64901702E9A9D9B3BC11318210661273878AA886D2F23D871FE2C064D85BE05D5F4EC327DABD7C03DEBD97FCCD574E36A066E2B1E6A6FCE3EDC0DC7D940B2DD37B97E25BEEA934E98517141BD18FBF7B0A6B743C2105913FE9347D456659823E78DF31DB5897A7F7AE46B51BF8E1095A58FF548E474D14A64B45D9C359A05C4BBA
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs3 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 182 308 rc
9 295 m
173 295 l
177.41827 295 181 291.41827 181 287 c
181 27 l
181 22.581722 177.41827 19 173 19 c
9 19 l
4.5817218 19 1 22.581722 1 27 c
1 287 l
1 291.41827 4.5817218 295 9 295 c
h
9 295 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -491 307 cm
500 12 m
664 12 l
668.41827 12 672 15.581722 672 20 c
672 280 l
672 284.41827 668.41827 288 664 288 c
500 288 l
495.58173 288 492 284.41827 492 280 c
492 20 l
492 15.581722 495.58173 12 500 12 c
h
500 12 m
S
0 i
0.75 0.75 1 sc
CM
97 259.375 m
169 259.375 l
169 243.625 l
97 243.625 l
h
97 259.375 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -491 307 cm
588 47.625 m
660 47.625 l
660 63.375 l
588 63.375 l
h
588 47.625 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 133 251.5 cm
/F1.1[ 8 0 0 -8 0 0]sf
-21.559999 2.8880005 m
(!"#$%&'\(\)*)[ 5.480000 4.296000 2.520000 4.296000 4.448000 2.224000 5.776000 4.592000 2.664000 0.000000 ] xS
/Cs1 SC
1 0.75 0.75 sc
CM
97 235.75 m
169 235.75 l
169 220 l
97 220 l
h
97 235.75 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -491 307 cm
588 71.25 m
660 71.25 l
660 87 l
588 87 l
h
588 71.25 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 133 227.875 cm
-8 2.8880005 m
(+,-.)[ 5.480000 4.296000 1.776000 0.000000 ] xS
/Cs1 SC
0.75 1 0.75 sc
CM
97 212.125 m
169 212.125 l
169 196.375 l
97 196.375 l
h
97 212.125 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -491 307 cm
588 94.875 m
660 94.875 l
660 110.625 l
588 110.625 l
h
588 94.875 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 133 204.25 cm
-29.408001 2.8880005 m
(/,0#%123,&4\(56)[ 5.632000 4.296000 4.744000 2.520000 4.448000 6.064000 1.776000 4.000000 4.296000 2.224000 5.776000 4.592000 4.448000 0.000000 ] xS
/Cs1 SC
0.75 1 0.75 sc
CM
97 188.5 m
169 188.5 l
169 172.75 l
97 172.75 l
h
97 188.5 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -491 307 cm
588 118.5 m
660 118.5 l
660 134.25 l
588 134.25 l
h
588 118.5 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 133 180.625 cm
-27.848 2.8880005 m
(7\(25#123,&4\(56)[ 5.184000 4.592000 1.776000 4.448000 2.520000 6.064000 1.776000 4.000000 4.296000 2.224000 5.776000 4.592000 4.448000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -491 307 cm
624 63.375 m
624 67.75 l
S
0 i
CM
133 237.64999 m
133.60001 239.25 l
132.39999 239.25 l
h
133 237.64999 m
f
0 J
0 j
1 0 0 -1 -491 307 cm
624 69.349998 m
624.59998 67.75 l
623.40002 67.75 l
h
624 69.349998 m
S
1 J
1 j
0.60000002 i
624 110.625 m
624 115 l
S
0 i
CM
133 190.39999 m
133.60001 192 l
132.39999 192 l
h
133 190.39999 m
f
0 J
0 j
1 0 0 -1 -491 307 cm
624 116.6 m
624.59998 115 l
623.40002 115 l
h
624 116.6 m
S
0.75 0.75 1 sc
CM
97 164.875 m
169 164.875 l
169 149.125 l
97 149.125 l
h
97 164.875 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -491 307 cm
588 142.125 m
660 142.125 l
660 157.875 l
588 157.875 l
h
588 142.125 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 133 157 cm
-21.559999 2.8880005 m
(!"#$%&'\(\)*)[ 5.480000 4.296000 2.520000 4.296000 4.448000 2.224000 5.776000 4.592000 2.664000 0.000000 ] xS
/Cs1 SC
1 0.75 0.75 sc
CM
97 141.25 m
169 141.25 l
169 125.5 l
97 125.5 l
h
97 141.25 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -491 307 cm
588 165.75 m
660 165.75 l
660 181.5 l
588 181.5 l
h
588 165.75 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 133 133.375 cm
-8 2.8880005 m
(+,-.)[ 5.480000 4.296000 1.776000 0.000000 ] xS
/Cs1 SC
0.75 1 0.75 sc
CM
97 117.625 m
169 117.625 l
169 101.875 l
97 101.875 l
h
97 117.625 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -491 307 cm
588 189.375 m
660 189.375 l
660 205.125 l
588 205.125 l
h
588 189.375 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 133 109.75 cm
-29.408001 2.8880005 m
(/,0#%123,&4\(56)[ 5.632000 4.296000 4.744000 2.520000 4.448000 6.064000 1.776000 4.000000 4.296000 2.224000 5.776000 4.592000 4.448000 0.000000 ] xS
/Cs1 SC
0.75 1 0.75 sc
CM
97 94 m
169 94 l
169 78.25 l
97 78.25 l
h
97 94 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -491 307 cm
588 213 m
660 213 l
660 228.75 l
588 228.75 l
h
588 213 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 133 86.125 cm
-27.848 2.8880005 m
(7\(25#123,&4\(56)[ 5.184000 4.592000 1.776000 4.448000 2.520000 6.064000 1.776000 4.000000 4.296000 2.224000 5.776000 4.592000 4.448000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -491 307 cm
624 157.875 m
624 162.25 l
S
0 i
CM
133 143.14999 m
133.60001 144.75 l
132.39999 144.75 l
h
133 143.14999 m
f
0 J
0 j
1 0 0 -1 -491 307 cm
624 163.85001 m
624.59998 162.25 l
623.40002 162.25 l
h
624 163.85001 m
S
1 J
1 j
0.60000002 i
624 205.125 m
624 209.5 l
S
0 i
CM
133 95.900002 m
133.60001 97.5 l
132.39999 97.5 l
h
133 95.900002 m
f
0 J
0 j
1 0 0 -1 -491 307 cm
624 211.10001 m
624.59998 209.5 l
623.40002 209.5 l
h
624 211.10001 m
S
1 J
1 j
0.60000002 i
624 134.25 m
624 138.625 l
S
0 i
CM
133 166.77499 m
133.60001 168.375 l
132.39999 168.375 l
h
133 166.77499 m
f
0 J
0 j
1 0 0 -1 -491 307 cm
624 140.22501 m
624.59998 138.625 l
623.40002 138.625 l
h
624 140.22501 m
S
1 1 0.75 sc
CM
13 283 m
85 283 l
85 267.25 l
13 267.25 l
h
13 283 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -491 307 cm
504 24 m
576 24 l
576 39.75 l
504 39.75 l
h
504 24 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 49 275.125 cm
-9.1160002 2.8880005 m
(850.#)[ 2.072000 4.448000 4.744000 4.448000 0.000000 ] xS
/Cs1 SC
0.75 1 1 sc
CM
13 70.375 m
85 70.375 l
85 54.625 l
13 54.625 l
h
13 70.375 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -491 307 cm
504 236.625 m
576 236.625 l
576 252.375 l
504 252.375 l
h
504 236.625 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 49 62.5 cm
-14.892 2.8880005 m
(9::2#2\(5)[ 5.184000 4.744000 4.744000 1.776000 2.520000 1.776000 4.592000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -491 307 cm
596 228.75 m
571.36926 235.67738 l
S
0 i
CM
78.829041 70.88942 m
80.531723 70.745018 l
80.206833 71.9002 l
h
78.829041 70.88942 m
f
0 J
0 j
1 0 0 -1 -491 307 cm
569.82904 236.11058 m
571.53174 236.25497 l
571.20685 235.09979 l
h
569.82904 236.11058 m
S
1 1 0.75 sc
CM
13 46.75 m
85 46.75 l
85 31 l
13 31 l
h
13 46.75 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -491 307 cm
504 260.25 m
576 260.25 l
576 276 l
504 276 l
h
504 260.25 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 49 38.875 cm
-12.38 2.8880005 m
(;.#0.#)[ 6.080000 4.448000 2.520000 4.744000 4.448000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -491 307 cm
540 252.375 m
540 256.75 l
S
0 i
CM
49 48.650002 m
49.599998 50.25 l
48.400002 50.25 l
h
49 48.650002 m
f
0 J
0 j
1 0 0 -1 -491 307 cm
540 258.35001 m
540.59998 256.75 l
539.40002 256.75 l
h
540 258.35001 m
S
1 J
1 j
0.60000002 i
568 39.75 m
592.63074 46.677391 l
S
0 i
CM
103.17096 259.8894 m
101.79317 260.90021 l
101.46828 259.74503 l
h
103.17096 259.8894 m
f
0 J
0 j
1 0 0 -1 -491 307 cm
594.17096 47.110584 m
592.79315 46.0998 l
592.46826 47.254982 l
h
594.17096 47.110584 m
S
1 J
1 j
0.60000002 i
624 181.5 m
624 185.875 l
S
0 i
CM
133 119.525 m
133.60001 121.125 l
132.39999 121.125 l
h
133 119.525 m
f
0 J
0 j
1 0 0 -1 -491 307 cm
624 187.47501 m
624.59998 185.875 l
623.40002 185.875 l
h
624 187.47501 m
S
1 J
1 j
0.60000002 i
624 87 m
624 91.375 l
S
0 i
CM
133 214.02499 m
133.60001 215.625 l
132.39999 215.625 l
h
133 214.02499 m
f
0 J
0 j
1 0 0 -1 -491 307 cm
624 92.974998 m
624.59998 91.375 l
623.40002 91.375 l
h
624 92.974998 m
S
1 1 1 sc
CM
13 117.625 m
85 117.625 l
85 94 l
13 94 l
h
13 117.625 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -491 307 cm
504 189.375 m
576 189.375 l
576 213 l
504 213 l
h
504 189.375 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 49 105.8125 cm
-29.704 -2.223999 m
(7\(\(-25<=7"::25<)[ 5.184000 4.592000 4.592000 1.776000 1.776000 4.448000 4.592000 2.664000 5.184000 4.296000 4.744000 4.744000 1.776000 4.448000 0.000000 ] xS
-17.188 8 m
(>;0#2\(5"-?)[ 2.072000 6.080000 4.744000 2.520000 1.776000 4.592000 4.448000 4.296000 1.776000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -491 307 cm
540 39.75 m
540 185.875 l
S
0 i
CM
49 119.525 m
49.599998 121.125 l
48.400002 121.125 l
h
49 119.525 m
f
0 J
0 j
1 0 0 -1 -491 307 cm
540 187.47501 m
540.59998 185.875 l
539.40002 185.875 l
h
540 187.47501 m
S
1 J
1 j
0.60000002 i
540 213 m
540 233.125 l
S
0 i
CM
49 72.275002 m
49.599998 73.875 l
48.400002 73.875 l
h
49 72.275002 m
f
0 J
0 j
1 0 0 -1 -491 307 cm
540 234.72501 m
540.59998 233.125 l
539.40002 233.125 l
h
540 234.72501 m
S
/Cs3 SC
0 sc
1 0 0 -1 139 283.5 cm
/F1.1[ 10 0 0 -10 0 0]sf
-33.334999 3.8600006 m
(+,32:."-&!-\($@)[ 6.850000 5.370000 5.000000 2.220000 5.930000 5.560000 5.370000 2.220000 2.780000 6.850000 2.220000 5.740000 5.370000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -491 307 cm
540 0 m
540 20.5 l
S
0 i
CM
49 284.89999 m
49.599998 286.5 l
48.400002 286.5 l
h
49 284.89999 m
f
0 J
0 j
1 0 0 -1 -491 307 cm
540 22.1 m
540.59998 20.5 l
539.40002 20.5 l
h
540 22.1 m
S
1 J
1 j
0.60000002 i
540 276 m
540 296.5 l
S
0 i
CM
49 8.8999996 m
49.599998 10.5 l
48.400002 10.5 l
h
49 8.8999996 m
f
0 J
0 j
1 0 0 -1 -491 307 cm
540 298.10001 m
540.59998 296.5 l
539.40002 296.5 l
h
540 298.10001 m
S
ep
end
%%Trailer
%%EOF
